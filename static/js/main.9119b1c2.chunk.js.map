{"version":3,"sources":["components/CVComponents.js","components/EducationForm.js","components/ExperienceForm.js","components/GeneralForm.js","components/AddEducation.js","components/AddExperience.js","components/Header.js","components/Sample.js","components/App.js","index.js"],"names":["General","props","className","general","firstName","lastName","phone","email","onClick","editGeneral","Education","education","schoolName","year","degree","extra","deleteEducation","index","editEducation","Experience","experience","name","yearStart","yearEnd","description","deleteExperience","editExperience","EducationForm","handleChange","e","currentTarget","updatedInput","value","updatedEducation","updateEducation","this","type","onChange","placeholder","React","Component","ExperienceForm","updatedExperience","updateExperience","GeneralForm","updateGeneral","required","AddEducation","schoolNameRef","createRef","degreeRef","yearRef","extraRef","createEducation","preventDefault","school","current","show","addEducation","reset","onSubmit","ref","AddExperience","nameRef","yearStartRef","yearEndRef","descriptionRef","createExperience","employer","addExperience","Header","loadSampleData","sample","title","school1","school2","school3","employer1","employer2","newEdu","newEx","App","setState","state","showEducation","Date","now","key","showExperience","Object","keys","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9119b1c2.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\n\r\nconst General = (props) => {\r\n  return (\r\n    <div className=\"general\">\r\n      <h2>{props.general.firstName || 'First Name'}</h2>\r\n      <h2>{props.general.lastName || 'Last Name'}</h2>\r\n      <h3>{props.general.phone || 'Phone Number'}</h3>\r\n      <h3>{props.general.email || 'Email Address'}</h3>\r\n      <i className=\"fas fa-edit\" onClick={props.editGeneral}></i>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Education = (props) => {\r\n  const { schoolName, year, degree, extra } = props.education;\r\n  \r\n  return (\r\n    <div className=\"item\">\r\n      <h3>{schoolName}</h3>\r\n      <p>{year} <span>-</span> {degree}</p>\r\n      <h4>ACHIEVEMENTS &#38; HONORS</h4>\r\n      <p>{extra}</p>\r\n      <i className=\"fas fa-minus-circle\" onClick={() => props.deleteEducation(props.index)}></i>\r\n      <i className=\"fas fa-edit edit\" onClick={() => props.editEducation(props.index)}></i>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Experience = (props) => {\r\n  const { name, yearStart, yearEnd, description } = props.experience;\r\n  \r\n  return (\r\n    <div className=\"item\">\r\n      <h3>{name}</h3>\r\n      <p>{yearStart} <span> to </span>{yearEnd ? yearEnd : 'present'}</p>\r\n      <h4>Description</h4>\r\n      <p>{description}</p>\r\n      <i className=\"fas fa-minus-circle\" onClick={() => props.deleteExperience(props.index)}></i>\r\n      <i className=\"fas fa-edit edit\" onClick={() => props.editExperience(props.index)}></i>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { General, Education, Experience };","import React from 'react';\r\n\r\nclass EducationForm extends React.Component {\r\n  handleChange = (e) => {\r\n    const index = this.props.index; \r\n    const name = e.currentTarget.name; \r\n    const updatedInput = e.currentTarget.value; \r\n     const updatedEducation = {\r\n      ...this.props.education, \r\n      [name]: updatedInput\r\n    };\r\n    this.props.updateEducation(updatedEducation, index);\r\n  }\r\n  \r\n  render() {\r\n    const { schoolName, degree, year, extra } = this.props.education;\r\n    \r\n    return (\r\n      <form>\r\n        <h2>Education Information</h2>\r\n        <label>School Name:</label> \r\n          <input \r\n            type=\"text\" \r\n            name=\"schoolName\"\r\n            value={schoolName} \r\n           onChange={this.handleChange}\r\n           placeholder=\"Enter the school name...\"\r\n          /> \r\n        <label>Degree/Field of Study:</label>\r\n        <input \r\n          type=\"text\" \r\n          name=\"degree\"\r\n          value={degree} \r\n          onChange={this.handleChange}\r\n          placeholder=\"Enter your Field of Study...\"\r\n        />\r\n        <label>Year Graduated:</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"year\"\r\n            value={year} \r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter year of or expected year of completion...\"\r\n          />\r\n        <label>Awards and Honors:</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"extra\"\r\n            value={extra}  \r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter any awards or honors...\"\r\n          />\r\n          <button type=\"submit\" onClick={() => this.props.editEducation(this.props.index)}>Submit</button>            \r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EducationForm;","import React from 'react';\r\n\r\nclass ExperienceForm extends React.Component {\r\n  handleChange = (e) => {\r\n    const index = this.props.index; \r\n    const name = e.currentTarget.name; \r\n    const updatedInput = e.currentTarget.value; \r\n     const updatedExperience = {\r\n      ...this.props.experience, \r\n      [name]: updatedInput\r\n    };\r\n    this.props.updateExperience(updatedExperience, index);\r\n  }\r\n  \r\n  render() {\r\n    const { name, yearStart, yearEnd, description } = this.props.experience;\r\n\r\n    return (\r\n      <form>\r\n        <h2>Experience Information</h2>\r\n        <label>Employer:</label> \r\n          <input \r\n            type=\"text\" \r\n            name=\"name\"\r\n            value={name} \r\n           onChange={this.handleChange}\r\n           placeholder=\"Enter the employer name...\"\r\n          /> \r\n        <label>Year Start:</label>\r\n        <input \r\n          type=\"text\" \r\n          name=\"yearStart\"\r\n          value={yearStart} \r\n          onChange={this.handleChange}\r\n          placeholder=\"Enter year started...\"\r\n        />\r\n        <label>Year End:</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"yearEnd\"\r\n            value={yearEnd} \r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter year ended...\"\r\n          />\r\n        <label>Description:</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"description\"\r\n            value={description}  \r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter description and experiences...\"\r\n          />\r\n          <button type=\"submit\" onClick={() => this.props.editExperience(this.props.index)}>Submit</button>            \r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExperienceForm;","import React from 'react';\r\n\r\nclass GeneralForm extends React.Component {\r\n  handleChange = (e) => {\r\n    const name = e.currentTarget.name;\r\n    const updatedInput = e.currentTarget.value;\r\n    this.props.updateGeneral(updatedInput, name);\r\n  }\r\n\r\n  render() {\r\n    const { firstName, lastName, phone, email } = this.props.general;\r\n\r\n    return (\r\n      <form className=\"general-form\">\r\n        <h2>General Information</h2>\r\n        <label>First Name:</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"firstName\"\r\n            value={firstName} \r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter your first name...\"\r\n            required\r\n          />\r\n        <label>Last Name:</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"lastName\"\r\n            value={lastName} \r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter your last name...\"\r\n            required\r\n          />\r\n        <label>Phone:</label>\r\n          <input \r\n            type=\"tel\" \r\n            name=\"phone\"\r\n            value={phone} \r\n            onChange={this.handleChange}\r\n            placeholder=\"(xxx) xxx - xxxx\"\r\n          />\r\n        <label>Email:</label>\r\n          <input \r\n            type=\"email\" \r\n            name=\"email\"\r\n            value={email} \r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter an email...\"\r\n          />\r\n        <button type=\"submit\" onClick={this.props.editGeneral}>Submit</button>\r\n        {/* <button type=\"submit\">Submit</button> */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GeneralForm;","import React from \"react\";\r\n\r\nclass AddEducation extends React.Component {\r\n  schoolNameRef = React.createRef();\r\n  degreeRef = React.createRef();\r\n  yearRef = React.createRef();\r\n  extraRef = React.createRef();\r\n\r\n  createEducation = (e) => {\r\n    e.preventDefault();\r\n    const school = {\r\n      schoolName: this.schoolNameRef.current.value,\r\n      degree: this.degreeRef.current.value,\r\n      year: this.yearRef.current.value,\r\n      extra: this.extraRef.current.value,\r\n      show: true,\r\n    };\r\n    this.props.addEducation(school);\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.createEducation}> \r\n        <h2>Education Information</h2>\r\n        <label>School Name:</label> \r\n          <input \r\n            type=\"text\" \r\n            ref={this.schoolNameRef}\r\n            name=\"schoolName\"\r\n            placeholder=\"Enter the school name...\"\r\n          /> \r\n        <label>Degree/Field of Study:</label>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.degreeRef}\r\n            name=\"degree\"\r\n            placeholder=\"Enter your Field of Study...\"\r\n          />\r\n        <label>Year Graduated:</label>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.yearRef}\r\n            name=\"year\"\r\n            placeholder=\"Enter year of or expected year of completion...\"\r\n          />\r\n        <label>Awards and Honors:</label>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.extraRef}\r\n            name=\"extra\"\r\n            placeholder=\"Enter any awards or honors...\"\r\n          />\r\n        <button type=\"submit\">Submit</button>            \r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddEducation;\r\n","import React from \"react\";\r\n\r\nclass AddExperience extends React.Component {\r\n  nameRef = React.createRef();\r\n  yearStartRef = React.createRef();\r\n  yearEndRef = React.createRef();\r\n  descriptionRef = React.createRef();\r\n\r\n  createExperience = (e) => {\r\n    e.preventDefault();\r\n    const employer = {\r\n      name: this.nameRef.current.value,\r\n      yearStart: this.yearStartRef.current.value,\r\n      yearEnd: this.yearEndRef.current.value,\r\n      description: this.descriptionRef.current.value,\r\n      show: true,\r\n    };\r\n    this.props.addExperience(employer);\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.createExperience}> \r\n        <h2>Experience Information</h2>\r\n        <label>Employer Name:</label> \r\n          <input \r\n            type=\"text\" \r\n            ref={this.nameRef}\r\n            name=\"name\"\r\n            placeholder=\"Enter the employer name...\"\r\n          /> \r\n        <label>Year Start:</label>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.yearStartRef}\r\n            name=\"yearStart\"\r\n            placeholder=\"Enter year started...\"\r\n          />\r\n        <label>Year End:</label>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.yearEndRef}\r\n            name=\"yearEnd\"\r\n            placeholder=\"Enter year ended...\"\r\n          />\r\n        <label>Description:</label>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.descriptionRef}\r\n            name=\"description\"\r\n            placeholder=\"Enter description and experiences...\"\r\n          />\r\n        <button type=\"submit\">Submit</button>            \r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddExperience;\r\n","const Header = (props) => {\r\n  return (\r\n    <header>\r\n      <h1>CV App</h1>\r\n      <button type=\"button\" onClick={props.loadSampleData}>Fill Sample Content</button>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","const sample = {\r\n  general: {\r\n    title: 'General Information',\r\n    firstName: 'Homer',\r\n    lastName: 'Simpson',\r\n    phone: '555-555-1234',\r\n    email: 'example@email.com',\r\n    show: true,\r\n  },\r\n  education: {\r\n    school1: {\r\n      schoolName: 'Springfield University',\r\n      degree: 'Nuclear Safety',\r\n      year: '2020',\r\n      extra: 'Party down with the nerds',\r\n      show: true,\r\n    },\r\n    school2: {\r\n      schoolName: 'Springfield High School',\r\n      degree: 'GE',\r\n      year: '2016',\r\n      extra: 'I can\\'t believe I ate the whole thing',\r\n      show: true,\r\n    },\r\n    school3: {\r\n      schoolName: 'Springfield Elementary',\r\n      degree: 'none',\r\n      year: '2012',\r\n      extra: '',\r\n      show: true,\r\n    },\r\n  },\r\n  experience: {\r\n    employer1: {\r\n      name: 'Springfield Nuclear Plant',\r\n      yearStart: '2010',\r\n      yearEnd: 'present',\r\n      description: 'You know... safety stuff',\r\n      show: true,\r\n    },\r\n    employer2: {\r\n      name: 'Krusty Burger',\r\n      yearStart: '2008',\r\n      yearEnd: '2010',\r\n      description: 'Make and Eat burgers',\r\n      show: true,\r\n    },      \r\n  },\r\n  newEdu: false,\r\n  newEx: false,\r\n}\r\n\r\nexport default sample;","import React from 'react';\r\nimport { General, Education, Experience } from './CVComponents';\r\nimport EducationForm from './EducationForm';\r\nimport ExperienceForm from './ExperienceForm';\r\nimport GeneralForm from './GeneralForm';\r\nimport AddEducation from './AddEducation';\r\nimport AddExperience from './AddExperience';\r\nimport Header from './Header';\r\nimport sample from './Sample';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    \r\n    this.state = {\r\n      general: {\r\n        firstName: '',\r\n        lastName: '',\r\n        phone: '',\r\n        email: '',\r\n        show: true,\r\n      },\r\n      education: {\r\n      },\r\n      experience: {\r\n      },\r\n      newEdu: false,\r\n      newEx: false,\r\n    }\r\n  }\r\n\r\n  loadSampleData = () => {\r\n    this.setState({ \r\n      general: sample.general,\r\n      education: sample.education,\r\n      experience: sample.experience,\r\n    });\r\n  }\r\n\r\n  editGeneral = (e) => {\r\n    e.preventDefault();\r\n\r\n    const general = { ...this.state.general };\r\n    general.show = !general.show;\r\n    this.setState({ general });\r\n  }\r\n\r\n  updateGeneral = (updatedInput, name) => {\r\n    const general = { ...this.state.general };\r\n    general[name] = updatedInput;\r\n    this.setState({ general });\r\n  };\r\n\r\n  showEducation = () => {\r\n    this.setState({\r\n      newEdu: !this.state.newEdu\r\n    });\r\n  }\r\n\r\n  addEducation = (school) => {\r\n    const education = { ...this.state.education };;\r\n    education[`school${Date.now()}`] = school;\r\n    this.setState({ education });\r\n    this.showEducation();\r\n  }\r\n\r\n  editEducation = (key) => {\r\n    const education = { ...this.state.education };\r\n    education[key].show = !education[key].show;\r\n    this.setState({ education });\r\n  }\r\n\r\n  updateEducation = (updatedEducation, index) => {\r\n    const education = { ...this.state.education };\r\n    education[index] = updatedEducation;\r\n    this.setState({ education });\r\n  };\r\n\r\n  showExperience = () => {\r\n    this.setState({\r\n      newEx: !this.state.newEx\r\n    });\r\n  }\r\n\r\n  addExperience = (employer) => {\r\n    const experience = { ...this.state.experience };;\r\n    experience[`employer${Date.now()}`] = employer;\r\n    this.setState({ experience });\r\n    this.showExperience();\r\n  }\r\n\r\n  editExperience = (key) => {\r\n    const experience = { ...this.state.experience };\r\n    experience[key].show = !experience[key].show;\r\n    this.setState({ experience });\r\n  }\r\n\r\n  updateExperience = (updatedExperience, index) => {\r\n    const experience = { ...this.state.experience };\r\n    experience[index] = updatedExperience;\r\n    this.setState({ experience });\r\n  };\r\n\r\n  deleteEducation = (key) => {\r\n    const education = { ...this.state.education };\r\n    delete education[key];\r\n    this.setState({ education });\r\n  }\r\n\r\n  deleteExperience = (key) => {\r\n    const experience = { ...this.state.experience };\r\n    delete experience[key];\r\n    this.setState({ experience });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header loadSampleData={this.loadSampleData}/>\r\n        <div className=\"cv-form\">\r\n          {this.state.general.show ? \r\n            <General\r\n              general={this.state.general}\r\n              editGeneral={this.editGeneral}\r\n              /> \r\n              : \r\n              <GeneralForm \r\n              general={this.state.general}\r\n              updateGeneral={this.updateGeneral}\r\n              editGeneral={this.editGeneral}\r\n            />\r\n          }\r\n          <div className=\"info\">\r\n            <h2>Education</h2>\r\n            <i className=\"fas fa-plus\" onClick={this.showEducation}></i>\r\n            {this.state.newEdu ? <AddEducation addEducation={this.addEducation}/> : null}\r\n            {Object.keys(this.state.education).map(key => (\r\n              (this.state.education[key].show === true) ? \r\n                <Education \r\n                  key={key}\r\n                  index={key}\r\n                  education={this.state.education[key]}\r\n                  editEducation={this.editEducation}\r\n                  deleteEducation={this.deleteEducation}\r\n                /> \r\n                : \r\n                <EducationForm \r\n                  key={key}\r\n                  index={key}\r\n                  education={this.state.education[key]}\r\n                  updateEducation={this.updateEducation}\r\n                  editEducation={this.editEducation}\r\n                />\r\n            ))} \r\n          </div>\r\n          <div className=\"info\">\r\n            <h2>Experience</h2>\r\n            <i className=\"fas fa-plus\" onClick={this.showExperience}></i>\r\n            {this.state.newEx ? <AddExperience addExperience={this.addExperience}/> : null}\r\n            {Object.keys(this.state.experience).map(key => (\r\n              (this.state.experience[key].show === true) ? \r\n                <Experience \r\n                  key={key}\r\n                  index={key}\r\n                  experience={this.state.experience[key]}\r\n                  editExperience={this.editExperience}\r\n                  deleteExperience={this.deleteExperience}\r\n                />\r\n                :\r\n                <ExperienceForm \r\n                  key={key}\r\n                  index={key}\r\n                  experience={this.state.experience[key]}\r\n                  updateExperience={this.updateExperience}\r\n                  editExperience={this.editExperience}\r\n                />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './css/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}